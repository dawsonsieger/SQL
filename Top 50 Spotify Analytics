-- For this project, I downloaded Spotify data from Kaggle.
-- Then I created a table to insert Spotify data into.
-- Finally, I performed analytics on the data using SQL. 

#Creating the table: 
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL 
)

-- Then I inserted the Spotify Data .csv into the table.

-- Next, I explored the data using the following SQL. 

SELECT * FROM BIT_DB.Spotifydata;

-- How many artists appear in the Top 50 more than 1 time, and how many times do they appear?
SELECT artist_name AS Artist, COUNT(artist_name) AS Times_Appeared
FROM BIT_DB.Spotifydata
GROUP BY artist_name
HAVING COUNT(artist_name) > 1
ORDER BY COUNT(artist_name) DESC;

-- How many songs contain a featured artist?
SELECT COUNT(id) AS Songs_Containing_Features
FROM BIT_DB.Spotifydata
WHERE track_name LIKE '%feat%';

-- What are the top 3 LONGEST songs?
SELECT artist_name, track_name, duration_ms
FROM BIT_DB.Spotifydata
ORDER BY duration_ms DESC
LIMIT 3;

-- Calculate the average popularity for the artists in the Spotify data table. 
-- Then, for every artist with an average popularity of 90 or above, show their name, their average popularity, and label them as a “Top Star”.
WITH tempTable AS (
    SELECT artist_name, AVG(popularity) AS AVG_POPULARITY
    FROM Spotifydata
    GROUP BY artist_name
    )   
SELECT artist_name, AVG_POPULARITY, 'Top Star' AS tag
FROM tempTable
WHERE AVG_POPULARITY >= 90
ORDER BY AVG_POPULARITY DESC;
